# In this file you can override any option defined in the reference files.
# Copy in parts of the reference files and modify as you please.

akka {

  # Loggers to register at boot time (akka.event.Logging$DefaultLogger logs
  # to STDOUT)
  # loggers = ["org.slf4j.Logger"]
  loggers = ["akka.event.slf4j.Slf4jLogger"]

  # Log level used by the configured loggers (see "loggers") as soon
  # as they have been started; before that, see "stdout-loglevel"
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "DEBUG"

  # Log level for the very basic logger activated during ActorSystem startup.
  # This logger prints the log messages to stdout (System.out).
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  stdout-loglevel = "DEBUG"


  actor {
    provider = "cluster"

    # dispatcher
    my-dispatcher {
      type = Dispatcher
      executor = "thread-pool-executor"
      thread-pool-executor {
        core-pool-size-min = 1
        core-pool-size-factor = 2.0
        core-pool-size-max = 2
      }
      # Throughput for default Dispatcher, set to 1 for as fair as possible
      throughput = 10
    }

    default-dispatcher {
      # Throughput for default Dispatcher, set to 1 for as fair as possible
      type = Dispatcher
      throughput = 10
    }


    # router

    # mailbox
    default-mailbox {
      mailbox-type = akka.dispatch.UnboundedMailbox
      mailbox-capacity = 1000
      stash-capacity = -1
    }

    large-unbounded-mailbox {
      mailbox-type = akka.dispatch.UnboundedMailbox
      mailbox-capacity = 10000
      stash-capacity = -1
    }

    small-unbounded-mailbox {
      mailbox-type = akka.dispatch.UnboundedMailbox
      mailbox-capacity = 1000
      stash-capacity = -1
    }
  }

  serializers {
    java = akka.serialization.JavaSerializer
    kryo-Serializer = io.altoo.akka.serialization.kryo.KryoSerializer
  }

  serialization-bindings {
    "akka.actor.ActorRef" = kryo-Serializer
    "akka.actor.typed.ActorRef" = kryo-Serializer
    "akka.actor.typed.internal.adapter.ActorRefAdapter" = kryo-Serializer
    "akka.actor.typed.internal.receptionist.DefaultServiceKey" = kryo-Serializer
  }

  //  remote {
  //    log-remote-lifecycle-events = off
  //    # The port clients should connect to. Default is 2552.
  //    netty.tcp.port = 2552
  //  }


  cluster {
    allow-weakly-up-members = on

    log-info = off
    log-info-verbose = on
    failure-detector.acceptable-heartbeat-pause = 3
  }
}