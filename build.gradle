buildscript {
    ext {
        kotlinVersion = "1.3.50"
    }
    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        mavenCentral()
    }
    dependencies {
        /* 添加插件依赖路径（通过jar方式） */
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion"
    }
}

allprojects {
    group = 'com.uuzu'
    version = '0.1.0-SNAPSHOT' /* 项目版本 */
}

/* 所有子项目的通用配置 */
subprojects {
    /* 使用二进制插件 */
    apply plugin: 'java' /* java是Gradle的核心插件，是内置的，内置插件不需要配置依赖路径 */
    apply plugin: 'idea' /* 同上  让Gradle自动生成Intellij的项目文件*/
    apply plugin: 'kotlin'
    apply plugin: 'kotlin-jpa'
    apply plugin: 'kotlin-allopen'

    /* 指定jdk版本 */
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    /* java编译的时候缺省状态下会因为中文字符而失败 */
    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        maven { url "http://localhost:8081/repository/maven-public/" }
        mavenCentral()
    }

    /* 添加通用依赖 */
    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
        implementation "org.jetbrains.kotlin:kotlin-reflect"
        implementation "com.typesafe.akka:akka-actor_2.12:2.5.25"
        implementation "com.typesafe.akka:akka-slf4j_2.12:2.5.25"
        implementation "ch.qos.logback:logback-classic:1.2.3"
        implementation "org.hibernate:hibernate-core:3.6.10.Final"
//    implementation 'org.hibernate:hibernate-core:5.4.7.Final'
        implementation "org.hibernate:hibernate-shards:4.0.0"
        implementation "com.google.guava:guava:28.0-jre"
        implementation "io.netty:netty-all:4.0.30.Final"
        implementation "com.alibaba:easyexcel:2.0.4"

        implementation "mysql:mysql-connector-java:8.0.17"

        testCompile "junit:junit:4.12"
    }

    compileKotlin {
        kotlinOptions.jvmTarget = 1.8
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = 1.8
    }

    allOpen {
        annotation("com.caidt.infrastructure.AllOpen")
    }
    noArg {
        annotation("com.caidt.infrastructure.NoArg")
    }

}
